{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["// src/index.ts\r\nexport interface TableColumn {\r\n  prop: string;\r\n  label: string;\r\n  align?: 'left' | 'center' | 'right';\r\n  width?: number | string;\r\n  formatter?: (row: any, column: TableColumn, cellValue: any, index: number) => string;\r\n}\r\n\r\nexport interface PrintOptions {\r\n  title?: string;\r\n  showHeader?: boolean;\r\n  showFooter?: boolean;\r\n  pageSize?: 'A4' | 'A3' | 'A5' | 'Letter';\r\n  orientation?: 'portrait' | 'landscape';\r\n  margins?: string;\r\n  fontSize?: string;\r\n  headerStyle?: {\r\n    backgroundColor?: string;\r\n    color?: string;\r\n    fontWeight?: string;\r\n  };\r\n  customStyles?: string;\r\n  watermark?: string;\r\n  logo?: string;\r\n}\r\n\r\nexport interface PrintResult {\r\n  success: boolean;\r\n  message?: string;\r\n}\r\n\r\n/**\r\n * 高级表格打印工具类\r\n */\r\nexport class TablePrintUtil {\r\n  private options: Required<PrintOptions>;\r\n\r\n  constructor(options: PrintOptions = {}) {\r\n    this.options = {\r\n      title: '数据表格',\r\n      showHeader: true,\r\n      showFooter: true,\r\n      pageSize: 'A4',\r\n      orientation: 'portrait',\r\n      margins: '1cm',\r\n      fontSize: '12px',\r\n      headerStyle: {\r\n        backgroundColor: '#f5f7fa',\r\n        color: '#333',\r\n        fontWeight: 'bold'\r\n      },\r\n      customStyles: '',\r\n      watermark: '',\r\n      logo: '',\r\n      ...options\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 打印表格\r\n   */\r\n  async printTable(\r\n    data: any[], \r\n    columns: TableColumn[], \r\n    customOptions: Partial<PrintOptions> = {}\r\n  ): Promise<PrintResult> {\r\n    const finalOptions = { ...this.options, ...customOptions };\r\n    \r\n    try {\r\n      const printContent = this.generateAdvancedHTML(data, columns, finalOptions);\r\n      await this.executePrint(printContent, finalOptions);\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('打印失败:', error);\r\n      return { \r\n        success: false, \r\n        message: error instanceof Error ? error.message : '打印失败'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 预览表格\r\n   */\r\n  previewTable(\r\n    data: any[], \r\n    columns: TableColumn[], \r\n    options: Partial<PrintOptions> = {}\r\n  ): void {\r\n    const finalOptions = { ...this.options, ...options };\r\n    const previewContent = this.generateAdvancedHTML(data, columns, finalOptions);\r\n    \r\n    const previewWindow = window.open('', '_blank', 'width=1000,height=700');\r\n    if (!previewWindow) {\r\n      throw new Error('无法打开预览窗口，请检查浏览器弹窗设置');\r\n    }\r\n\r\n    previewWindow.document.write(\r\n      previewContent.replace(\r\n        this.generatePrintScript(finalOptions),\r\n        '// 预览模式，不自动打印'\r\n      )\r\n    );\r\n    previewWindow.document.close();\r\n  }\r\n\r\n  /**\r\n   * 导出为HTML文件\r\n   */\r\n  exportToHTML(\r\n    data: any[], \r\n    columns: TableColumn[], \r\n    filename: string = 'table-export.html',\r\n    options: Partial<PrintOptions> = {}\r\n  ): void {\r\n    const finalOptions = { ...this.options, ...options };\r\n    const htmlContent = this.generateAdvancedHTML(data, columns, finalOptions);\r\n    \r\n    const blob = new Blob([htmlContent], { type: 'text/html' });\r\n    const url = URL.createObjectURL(blob);\r\n    \r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = filename;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    \r\n    URL.revokeObjectURL(url);\r\n  }\r\n\r\n  private generateAdvancedHTML(\r\n    data: any[], \r\n    columns: TableColumn[], \r\n    options: Required<PrintOptions>\r\n  ): string {\r\n    const currentTime = new Date().toLocaleString('zh-CN');\r\n    const totalPages = Math.ceil(data.length / 20);\r\n    \r\n    return `\r\n      <!DOCTYPE html>\r\n      <html>\r\n      <head>\r\n          <meta charset=\"utf-8\">\r\n          <title>${options.title}</title>\r\n          <style>\r\n              ${this.generatePrintStyles(options)}\r\n          </style>\r\n      </head>\r\n      <body>\r\n          ${options.showHeader ? this.generateHeader(options, currentTime) : ''}\r\n          ${this.generateTableContent(data, columns, options)}\r\n          ${options.showFooter ? this.generateFooter(data.length, totalPages) : ''}\r\n          \r\n          <script>\r\n              ${this.generatePrintScript(options)}\r\n          </script>\r\n      </body>\r\n      </html>\r\n    `;\r\n  }\r\n\r\n  private generatePrintStyles(options: Required<PrintOptions>): string {\r\n    return `\r\n      @media print {\r\n          body { margin: 0; }\r\n          .no-print { display: none !important; }\r\n          @page {\r\n              margin: ${options.margins};\r\n              size: ${options.pageSize} ${options.orientation};\r\n          }\r\n      }\r\n      \r\n      body {\r\n          font-family: 'Microsoft YaHei', Arial, sans-serif;\r\n          margin: 20px;\r\n          color: #333;\r\n          font-size: ${options.fontSize};\r\n          line-height: 1.6;\r\n          ${options.watermark ? this.generateWatermarkStyle(options.watermark) : ''}\r\n      }\r\n      \r\n      .print-header {\r\n          text-align: center;\r\n          margin-bottom: 30px;\r\n          border-bottom: 2px solid #409EFF;\r\n          padding-bottom: 15px;\r\n          position: relative;\r\n      }\r\n      \r\n      .print-logo {\r\n          position: absolute;\r\n          left: 0;\r\n          top: 0;\r\n          max-height: 50px;\r\n          max-width: 150px;\r\n      }\r\n      \r\n      .print-title {\r\n          font-size: 28px;\r\n          font-weight: bold;\r\n          margin: 0 0 10px 0;\r\n          color: #409EFF;\r\n      }\r\n      \r\n      .print-subtitle {\r\n          margin: 5px 0;\r\n          color: #666;\r\n          font-size: 14px;\r\n      }\r\n      \r\n      .print-table {\r\n          width: 100%;\r\n          border-collapse: collapse;\r\n          margin: 20px 0;\r\n          font-size: ${options.fontSize};\r\n      }\r\n      \r\n      .print-table th,\r\n      .print-table td {\r\n          border: 1px solid #ddd;\r\n          padding: 10px 8px;\r\n          text-align: left;\r\n          word-wrap: break-word;\r\n      }\r\n      \r\n      .print-table th {\r\n          background-color: ${options.headerStyle.backgroundColor};\r\n          color: ${options.headerStyle.color};\r\n          font-weight: ${options.headerStyle.fontWeight};\r\n      }\r\n      \r\n      .print-table tbody tr:nth-child(even) {\r\n          background-color: #fafafa;\r\n      }\r\n      \r\n      .print-footer {\r\n          margin-top: 30px;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          font-size: 12px;\r\n          color: #666;\r\n          border-top: 1px solid #eee;\r\n          padding-top: 15px;\r\n      }\r\n      \r\n      .text-center { text-align: center; }\r\n      .text-right { text-align: right; }\r\n      .text-left { text-align: left; }\r\n      \r\n      ${options.customStyles}\r\n    `;\r\n  }\r\n\r\n  private generateWatermarkStyle(watermark: string): string {\r\n    return `\r\n      position: relative;\r\n      &::before {\r\n          content: \"${watermark}\";\r\n          position: fixed;\r\n          top: 50%;\r\n          left: 50%;\r\n          transform: translate(-50%, -50%) rotate(-45deg);\r\n          font-size: 48px;\r\n          color: rgba(0, 0, 0, 0.1);\r\n          z-index: -1;\r\n          pointer-events: none;\r\n      }\r\n    `;\r\n  }\r\n\r\n  private generateHeader(options: Required<PrintOptions>, currentTime: string): string {\r\n    return `\r\n      <div class=\"print-header\">\r\n          ${options.logo ? `<img src=\"${options.logo}\" alt=\"Logo\" class=\"print-logo\">` : ''}\r\n          <h1 class=\"print-title\">${options.title}</h1>\r\n          <p class=\"print-subtitle\">打印时间: ${currentTime}</p>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private generateTableContent(\r\n    data: any[], \r\n    columns: TableColumn[], \r\n    options: Required<PrintOptions>\r\n  ): string {\r\n    const headerRow = columns.map(col => \r\n      `<th style=\"${col.width ? `width: ${col.width}` : ''}\">${col.label}</th>`\r\n    ).join('');\r\n    \r\n    const bodyRows = data.map((row, index) => {\r\n      const cells = columns.map(col => {\r\n        let value = this.getNestedValue(row, col.prop);\r\n        \r\n        if (col.formatter && typeof col.formatter === 'function') {\r\n          value = col.formatter(row, col, value, index);\r\n        }\r\n        \r\n        const alignClass = col.align ? `text-${col.align}` : '';\r\n        return `<td class=\"${alignClass}\">${value ?? ''}</td>`;\r\n      }).join('');\r\n      \r\n      return `<tr>${cells}</tr>`;\r\n    }).join('');\r\n\r\n    return `\r\n      <table class=\"print-table\">\r\n          <thead>\r\n              <tr>${headerRow}</tr>\r\n          </thead>\r\n          <tbody>\r\n              ${bodyRows}\r\n          </tbody>\r\n      </table>\r\n    `;\r\n  }\r\n\r\n  private generateFooter(totalCount: number, totalPages: number): string {\r\n    return `\r\n      <div class=\"print-footer\">\r\n          <div>共 ${totalCount} 条记录</div>\r\n          <div>第 1 页，共 ${totalPages} 页</div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private generatePrintScript(options: Required<PrintOptions>): string {\r\n    return `\r\n      window.onload = function() {\r\n          setTimeout(function() {\r\n              window.print();\r\n          }, 800);\r\n      }\r\n      \r\n      window.onafterprint = function() {\r\n          setTimeout(function() {\r\n              window.close();\r\n          }, 1000);\r\n      }\r\n    `;\r\n  }\r\n\r\n  private async executePrint(content: string, options: Required<PrintOptions>): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const printWindow = window.open('', '_blank', 'width=800,height=600');\r\n        \r\n        if (!printWindow) {\r\n          reject(new Error('无法打开打印窗口，请检查浏览器弹窗设置'));\r\n          return;\r\n        }\r\n\r\n        printWindow.document.write(content);\r\n        printWindow.document.close();\r\n        printWindow.focus();\r\n\r\n        printWindow.onload = () => {\r\n          setTimeout(() => {\r\n            printWindow.print();\r\n            resolve();\r\n          }, 500);\r\n        };\r\n\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getNestedValue(obj: any, path: string): any {\r\n    return path.split('.').reduce((current, prop) => current?.[prop], obj);\r\n  }\r\n}\r\n\r\n/**\r\n * Vue 组合式函数\r\n */\r\nexport function useTablePrint(options: PrintOptions = {}) {\r\n  const printUtil = new TablePrintUtil(options);\r\n\r\n  const printTable = async (\r\n    data: any[], \r\n    columns: TableColumn[], \r\n    customOptions: Partial<PrintOptions> = {}\r\n  ): Promise<PrintResult> => {\r\n    return await printUtil.printTable(data, columns, customOptions);\r\n  };\r\n\r\n  const previewTable = (\r\n    data: any[], \r\n    columns: TableColumn[], \r\n    customOptions: Partial<PrintOptions> = {}\r\n  ): void => {\r\n    printUtil.previewTable(data, columns, customOptions);\r\n  };\r\n\r\n  const exportToHTML = (\r\n    data: any[], \r\n    columns: TableColumn[], \r\n    filename?: string,\r\n    customOptions: Partial<PrintOptions> = {}\r\n  ): void => {\r\n    printUtil.exportToHTML(data, columns, filename, customOptions);\r\n  };\r\n\r\n  return {\r\n    printTable,\r\n    previewTable,\r\n    exportToHTML,\r\n    printUtil\r\n  };\r\n}\r\n\r\n// 默认导出\r\nexport default TablePrintUtil;"],"names":["TablePrintUtil","constructor","options","this","title","showHeader","showFooter","pageSize","orientation","margins","fontSize","headerStyle","backgroundColor","color","fontWeight","customStyles","watermark","logo","printTable","data","columns","customOptions","finalOptions","printContent","generateAdvancedHTML","executePrint","success","error","console","message","Error","previewTable","previewContent","previewWindow","window","open","document","write","replace","generatePrintScript","close","exportToHTML","filename","htmlContent","blob","Blob","type","url","URL","createObjectURL","link","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","currentTime","Date","toLocaleString","totalPages","Math","ceil","length","generatePrintStyles","generateHeader","generateTableContent","generateFooter","generateWatermarkStyle","map","col","width","label","join","row","index","value","getNestedValue","prop","formatter","align","totalCount","content","Promise","resolve","reject","printWindow","focus","onload","setTimeout","print","obj","path","split","reduce","current","printUtil","async"],"mappings":"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"}